<Window x:Class="_20_03_数据模板.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:cvt="clr-namespace:_20_03_数据模板.Converters"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:_20_03_数据模板"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        Title="MainWindow"
        Width="500"
        Height="450"
        Loaded="Window_Loaded"
        mc:Ignorable="d">
    <!--  仅仅使用ListBox的DisplayMemberPath指定绑定对象的属性，只能绑定一个字段，如只能显示Product的Name或Id等  -->

    <Window.Resources>
        <cvt:IdConverter x:Key="IdConverter" />
        <DataTemplate x:Key="ListBoxDataTemplate">
            <!--  将Border的背景绑定到ListBoxItem的背景  -->
            <Border Margin="5"
                    Padding="5"
                    Background="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}"
                    BorderBrush="LightGray"
                    BorderThickness="1"
                    CornerRadius="5">
                <StackPanel Orientation="Vertical">
                    <DockPanel LastChildFill="True">
                        <TextBlock DockPanel.Dock="Right" Text="{Binding Price}" />
                        <TextBlock Text="{Binding Name}" />
                    </DockPanel>
                    <TextBlock Text="{Binding Description}" />
                    <!--  Tag作为标记，可以携带一些信息（OBject属性）  -->

                    <!--<Button Height="20"
                                    Click="Button_Click"
                                    Content="详情"
                                    Tag="{Binding Id}" />-->

                    <!--  Binding后面什么都不写时表示绑定到DataTemplate关联的整个对象  -->
                    <Button Height="20"
                            Click="Button_Click"
                            Content="详情"
                            Tag="{Binding}" />
                </StackPanel>
            </Border>

            <!--  做判断，当ID为5时，Foreground为红色  -->
            <!--<DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Id}" Value="5">
                    <Setter  Property="TextBlock.Foreground" Value="Red"/>
                </DataTrigger>
            </DataTemplate.Triggers>-->

            <!--  做判断，当ID为偶数时，Foreground为红色  -->
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Id, Converter={StaticResource IdConverter}}" Value="0">
                    <Setter Property="TextBlock.Foreground" Value="Red" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </Window.Resources>

    <Grid>
        <!--  Stretch表示填充  -->
        <ListBox x:Name="LbProducts"
                 HorizontalContentAlignment="Stretch"
                 ItemTemplate="{StaticResource ListBoxDataTemplate}">
            <!--  设置每一个Item的样式  -->
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <!--  为了使每一个item仅显示数据模板的内容，需重写控件模板  -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <!--  将背景设置为透明  -->
                                <Grid Background="Transparent">
                                    <ContentPresenter />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="AliceBlue" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightSkyBlue" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>
    </Grid>
</Window>
